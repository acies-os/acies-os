name: Build and Deploy Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure SSH for private GitHub
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GH_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Preload GitHub's SSH host key
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          # SSH config: use the key for github.com, force the 'git' user, and only that identity
          cat > ~/.ssh/config << 'EOF'
          Host github.com
            HostName github.com
            User git
            IdentityFile ~/.ssh/id_rsa
            IdentitiesOnly yes
          EOF

          # Rewrite https://github.com/... to ssh://git@github.com/...
          git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          version: "latest"

      - name: Set up Python
        run: uv python install

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Install documentation dependencies
        run: uv sync --only-group docs

      - name: Build documentation
        run: just build-doc

      - name: Setup Pages
        uses: actions/configure-pages@v5
        if: github.ref == 'refs/heads/docs'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/docs'
        with:
          path: "./docs/_build"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/docs'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
